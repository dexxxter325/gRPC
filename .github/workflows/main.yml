#for docker hub: docker build -t grpc:latest . &&  docker tag grpc flaw1ess/grpc:latest && docker push flaw1ess/grpc:latest

name: Deploy GRPC

on:  #условия для выполнения данного файла.
  push: #Он будет запускаться при пуше(отправка изменений из локальной ветки) в ветку main
    branches:
      - main
  pull_request: #он будет запускаться при pull запросе - запрос на внесение изменений из одной ветки в другую
    branches:
      - main

env:
  REGISTRY: "docker.io/flaw1ess"
  IMAGE_NAME: "grpc" #имя docker-образа
  CONTAINER_NAME: "grpc"
  TAG_NAME: "latest"

jobs:
  test: #имя процесса
    runs-on: ubuntu-latest #удаленная машина(от GitHub),на кот.будут выполняться команды
    steps: # список шагов для выполнения в рамках данного джоба.
      - name: Checkout main #название шага
        uses: actions/checkout@v4 #переключаемся в нашу ветку main на удал.машине

      - name: Set up Go 1.21
        uses: actions/setup-go@v4 #устанавливаем на удаленную машину инструментарий Go
        with:
          go-version: 1.21 #параметры для установки

      - name: Install migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate.linux-amd64 /usr/local/bin/migrate

      - name: Test
        run: go test ./...

  #нам нужно облако развертывания приложения ,тк оно нам создаet эндпоинт для нашего приложения, который будет доступен в интернете.После развертывания ,я получаю URL-адресс приложения
  build_and_push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout main
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/grpc:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Checkout main
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Stop and remove the existing container (if exists)
        run: docker stop $CONTAINER_NAME || true && docker rm $CONTAINER_NAME || true

      - name: Run a new container from the pulled image #запускаем новый контейнер,основываясь на запушенном в DockerHub образе
        run: |
          docker run -d \
            --name $CONTAINER_NAME \
            -p 81:81 \
            $REGISTRY/$IMAGE_NAME:$TAG_NAME 
        


