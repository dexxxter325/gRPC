version: '3.8'
services:
  grpc:
    build: ./
    ports:
    - "8000:8000"
    environment:
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - grpc_gateway

  grpc_gateway:
    build: ./
    ports:
      - "8001:8001"
    depends_on:
      - postgres

  postgres:
    volumes:
      - C:/Users/prsok/volumes/databases/postgresql/grpc:/var/lib/postgresql/data
    image:
      postgres:16.2
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
    - "5430:5432"
    depends_on:
      - metrics

  metrics:
    build: ./
    ports:
      - "8080:8080"
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus
    volumes:
        - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
        - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    depends_on:
      - postgres-exporter

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - "9187:9187"
    depends_on:
      - jaeger

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    #environment:
      #- COLLECTOR_ZIPKIN_HOST_PORT=:9411
      #- COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686" # query serve frontend (Jaeger UI)
      - "14268:14268" # collector accept jaeger.thrift directly from clients
      #- "5775:5775/udp" # agent accept zipkin.thrift over compact thrift protocol (deprecated, used by legacy clients only)
      #- "6831:6831/udp" # agent accept jaeger.thrift over compact thrift protocol
      #- "6832:6832/udp" # agent accept jaeger.thrift over binary thrift protocol
      #- "5778:5778" # agent serve configs
      #- "14250:14250" # collector accept model.proto
      #- "9411:9411" # collector Zipkin compatible endpoint (optional)
      #- "4317:4317" # OTLP collector grpc
      #- "4318:4318" # OTLP collector http




