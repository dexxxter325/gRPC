syntax="proto3";

option go_package ="GRPC/gen";//куда будут сгенерированы файлы

import "google/api/annotations.proto";//gRPC-gateway

service Investment {
  rpc Create(CreateRequest) returns(CreateResponse){
    option (google.api.http) = {
      post: "/investment/create"
      body: "*"
    };
  }
  rpc Get(GetRequest)returns(GetResponse){
    option (google.api.http) = {
      get: "/investment/get"
    };
  }
  rpc Delete(DeleteRequest)returns(DeleteResponse){//(забираем банкноты)
    option (google.api.http) = {
      delete: "/investment/delete/{investment_id}"
    };
  }
}

message CreateRequest{
  int64 amount=1;//сумма инвестиции
  string currency=2;//валюта
}
message CreateResponse{
  int64 investment_id=1;
}

message GetRequest{}
message GetResponse {
  repeated Investments investment = 1;
}

message DeleteRequest{
  int64 investment_id=1;
}
message DeleteResponse{}

message Investments {//for return in get
  int64 ID = 1;
  int64 Amount = 2;
  string Currency = 3;
}


service Auth{
  rpc Register(RegisterRequest)returns(RegisterResponse){//like http endpoint(post)
    option (google.api.http) = {
      post: "/auth/register"
      body: "*"
    };
  }
  rpc Login(LoginRequest)returns(LoginResponse){
    option (google.api.http) = {
      post: "/auth/login"
      body: "*"
    };
  }
  rpc RefreshToken(RefreshTokenRequest)returns(RefreshTokenResponse){
    option (google.api.http) = {
      post: "/auth/refreshToken"
      body: "*"
    };
  }
}

message RegisterRequest{
  string email=1;
  string password=2;
}
message RegisterResponse{
  int64 user_id=1;
}

message LoginRequest{
  string email=1;
  string password=2;
}
message LoginResponse{
  string accessToken=1;
  string refreshToken=2;
}

message RefreshTokenRequest{
  string refreshToken=1;
}
message RefreshTokenResponse{
  string accessToken=1;
  string refreshToken=2;
}